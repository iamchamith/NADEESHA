<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        X3OK+i878g2i3a4gOwAAAABJRU5ErkJggg==
</value>
  </data>
</root>