<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>